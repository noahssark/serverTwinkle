{"version":3,"file":"static/js/237.17eeffbd.chunk.js","mappings":"kGAkBA,IAlBsB,WAKrB,OAAO,SAACA,GACP,IAAMC,EAAO,IAAIC,KAAKF,GAAiBG,UAEvC,OAAKF,EAEiB,IAAIG,KAAKC,eAC9BC,UAAUC,UACTC,OAAOP,GAJS,Y,2JCuGpB,UA3FkB,WACjB,IAAMQ,GAAaC,EAAAA,EAAAA,KACnB,GAAgCC,EAAAA,EAAAA,UAAiB,IAAjD,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KASA,OAPAC,EAAAA,EAAAA,YAAU,YACTC,EAAAA,EAAAA,GAAW,cAAcC,MAAK,SAAAC,GAC7BN,EAAYM,EAAKA,MACjBJ,GAAW,QAEV,KAGF,6BACC,SAAC,KAAD,WACC,iBAAMK,KAAK,SAASC,QAAQ,cAG5BP,GACA,SAAC,IAAD,CAAQQ,YAAU,KAElB,UAAC,IAAD,CAAOC,UAAU,gBAAjB,WACC,SAAC,IAAD,WACC,UAAC,IAAD,YACC,SAAC,IAAD,CACCA,UAAU,sBACVC,MAAM,QAFP,mBAMA,SAAC,IAAD,CACCD,UAAU,sBACVC,MAAM,QAFP,oBAMA,SAAC,IAAD,CACCD,UAAU,sBACVC,MAAM,QAFP,oBAMA,SAAC,IAAD,CACCD,UAAU,sBACVC,MAAM,QAFP,wBASF,SAAC,IAAD,UACEZ,EAASa,KAAI,SAAAC,GAAI,OACjB,UAAC,IAAD,YACC,SAAC,IAAD,CACCH,UAAU,sBACVC,MAAM,QAFP,UAIC,SAAC,KAAD,CACCG,GAAE,UAAKC,gDAAL,kBAAgDF,EAAKG,KADxD,SAGEH,EAAKN,UAGR,SAAC,IAAD,CACCG,UAAU,sBACVC,MAAM,QAFP,SAIEE,EAAKI,SAEP,SAAC,IAAD,CACCP,UAAU,sBACVC,MAAM,QAFP,SAIEE,EAAKK,SAEP,SAAC,IAAD,CACCR,UAAU,sBACVC,MAAM,QAFP,SAIEf,EAAWiB,EAAKM,eA3BJN,EAAKG","sources":["hooks/useFormatDate.ts","pages/admin/users/Users.tsx"],"sourcesContent":["const useFormatDate = () => {\r\n\t/**\r\n\t * @param {Date | string} unFormattedDate unformatted date\r\n\t * @return {string | null} if unFormattedDate cannot be converted to `Date` than will return null else formattedDate\r\n\t */\r\n\treturn (unFormattedDate: Date | string) => {\r\n\t\tconst date = new Date(unFormattedDate).getTime();\r\n\r\n\t\tif (!date) return '------';\r\n\r\n\t\tconst formattedDate = new Intl.DateTimeFormat(\r\n\t\t\tnavigator.language\r\n\t\t).format(date);\r\n\r\n\t\treturn formattedDate;\r\n\t};\r\n};\r\n\r\nexport default useFormatDate;\r\n","import { useState, useEffect, FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport getRequest from '../../../api/get';\r\nimport Loader from '../../../components/util/loader/Loader';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport useFormatDate from '../../../hooks/useFormatDate';\r\n\r\ninterface User {\r\n\t_id: string;\r\n\tname: string;\r\n\temail: string;\r\n\tphone: string;\r\n\tcreatedAt: string;\r\n}\r\n\r\nconst Users: FC = () => {\r\n\tconst formatDate = useFormatDate();\r\n\tconst [response, setResponse] = useState<User[]>([]);\r\n\tconst [loading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetRequest('/users/all').then(data => {\r\n\t\t\tsetResponse(data.data);\r\n\t\t\tsetLoading(false);\r\n\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<main>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<meta name=\"robots\" content=\"noindex\" />\r\n\t\t\t</Helmet>\r\n\r\n\t\t\t{loading ? (\r\n\t\t\t\t<Loader fullScreen />\r\n\t\t\t) : (\r\n\t\t\t\t<Table className=\"contact-table\">\r\n\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\tclassName=\"contact-table__cell\"\r\n\t\t\t\t\t\t\t\talign=\"right\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tName\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\tclassName=\"contact-table__cell\"\r\n\t\t\t\t\t\t\t\talign=\"right\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tEmail\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\tclassName=\"contact-table__cell\"\r\n\t\t\t\t\t\t\t\talign=\"right\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tPhone\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\tclassName=\"contact-table__cell\"\r\n\t\t\t\t\t\t\t\talign=\"right\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tDate\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t</TableHead>\r\n\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t{response.map(user => (\r\n\t\t\t\t\t\t\t<TableRow key={user._id}>\r\n\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\tclassName=\"contact-table__cell\"\r\n\t\t\t\t\t\t\t\t\talign=\"right\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\tto={`${process.env.REACT_APP_ADMIN_ROUTE}/users/${user._id}`}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{user.name}\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\tclassName=\"contact-table__cell\"\r\n\t\t\t\t\t\t\t\t\talign=\"right\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{user.email}\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\tclassName=\"contact-table__cell\"\r\n\t\t\t\t\t\t\t\t\talign=\"right\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{user.phone}\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\tclassName=\"contact-table__cell\"\r\n\t\t\t\t\t\t\t\t\talign=\"right\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{formatDate(user.createdAt)}\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</TableBody>\r\n\t\t\t\t</Table>\r\n\t\t\t)}\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport default Users;\r\n"],"names":["unFormattedDate","date","Date","getTime","Intl","DateTimeFormat","navigator","language","format","formatDate","useFormatDate","useState","response","setResponse","loading","setLoading","useEffect","getRequest","then","data","name","content","fullScreen","className","align","map","user","to","process","_id","email","phone","createdAt"],"sourceRoot":""}